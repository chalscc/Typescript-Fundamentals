#!/bin/bash

# Function to check if the branch is in a list
is_branch_in_list() {
  local branch="$1"
  local branch_list=("${@:2}")
  
  for b in "${branch_list[@]}"; do
    if [[ "$branch" == "$b" ]]; then
      return 0  # Found in the list
    fi
  done
  
  return 1  # Not found in the list
}

# Get the current branch name
BRANCH_NAME="$(git symbolic-ref --short HEAD)"

# Default branches to skip (excluded branches)
BRANCHES_TO_SKIP=("master" "develop" "preproduction")

# Default allowed branch types
ALLOWED_BRANCHES=("epic" "feature" "bugfix" "hotfix")

# Check if the branch is in the excluded list
if is_branch_in_list "$BRANCH_NAME" "${BRANCHES_TO_SKIP[@]}"; then
  echo "-"
  echo "No commits are allowed on excluded branch: $BRANCH_NAME"
  echo "-"
  exit 0
fi

# Check if the branch is one of the allowed types (e.g. feature/ or bugfix/)
BRANCH_TYPE="$(echo "$BRANCH_NAME" | cut -d '/' -f 1)"

if ! is_branch_in_list "$BRANCH_TYPE" "${ALLOWED_BRANCHES[@]}"; then
  echo "Invalid branch type: $BRANCH_TYPE. Must be one of: ${ALLOWED_BRANCHES[*]}"
  exit 0
fi

npm run test
